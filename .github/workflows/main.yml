name: Localtonet SSH Tunnel Setup (Direct Run)

on:
  workflow_dispatch:

jobs:
  tunnel:
    runs-on: ubuntu-latest

    steps:
      - name: Localtonet indir ve aç
        run: |
          wget https://localtonet.com/download/localtonet-linux-x64.zip
          unzip -o localtonet-linux-x64.zip
          chmod +x localtonet

      - name: SSH anahtarı oluştur
        run: |
          ssh-keygen -t rsa -b 4096 -N "" -f ./id_rsa
        id: genkey

      - name: Localtonet tünel başlat ve link yakala
        env:
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
        id: tunnel
        run: |
          # Localtonet'i background değil direkt çalıştırıp çıktı alıyoruz
          OUTPUT=$(./localtonet token "${AUTH_TOKEN}" --port 22 --no-browser --once 2>&1)
          echo "$OUTPUT"
          LINK=$(echo "$OUTPUT" | grep -oE '[a-z0-9]+\.localto\.net:[0-9]+' | head -n1)
          if [ -z "$LINK" ]; then
            echo "‼️ Localtonet bağlantı linki bulunamadı!"
            exit 1
          fi
          echo "ssh_link=$LINK" >> $GITHUB_OUTPUT

      - name: SSH bağlantı komutu oluştur
        run: |
          HOST=$(echo "${{ steps.tunnel.outputs.ssh_link }}" | cut -d':' -f1)
          PORT=$(echo "${{ steps.tunnel.outputs.ssh_link }}" | cut -d':' -f2)
          echo "Sunucu kullanıcı: $(whoami)"
          echo "SSH Bağlantı Komutu:"
          echo "ssh -i id_rsa -o StrictHostKeyChecking=no -p $PORT user@$HOST"
          echo "ssh -i id_rsa -o StrictHostKeyChecking=no -p $PORT user@$HOST" > ssh_connect_command.txt

      - name: SSH bağlantı komutunu artifact olarak yükle
        uses: actions/upload-artifact@v4
        with:
          name: ssh-connection-command
          path: ssh_connect_command.txt
