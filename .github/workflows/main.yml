
name: LocalToNet SSH Tunnel with Debug and Proper Token

on:
  workflow_dispatch:

jobs:
  tunnel:
    runs-on: ubuntu-latest
    env:
      AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

    steps:
      - name: Localtonet indir
        run: |
          wget https://localtonet.com/download/localtonet-linux-x64.zip
          unzip -o localtonet-linux-x64.zip
          chmod +x localtonet

      - name: Token kontrol (debug)
        run: |
          echo "Token: '${AUTH_TOKEN}'"

      - name: SSH anahtarı oluştur
        run: |
          ssh-keygen -t rsa -b 4096 -N "" -f ./id_rsa
          cat ./id_rsa.pub
        id: genkey

      - name: Localtonet tünel başlat
        run: |
          nohup ./localtonet token "${AUTH_TOKEN}" > tunnel.log 2>&1 &
          sleep 20
          cat tunnel.log

      - name: Bağlantı linkini yakala
        id: get_link
        run: |
          LINK=$(grep -oE 'tcp://[a-zA-Z0-9.-]+:[0-9]+' tunnel.log | head -n1)
          if [ -z "$LINK" ]; then
            echo "‼️ Localtonet bağlantı linki bulunamadı!"
            exit 1
          fi
          echo "ssh_link=$LINK" >> $GITHUB_OUTPUT

      - name: SSH bağlantı komutu ve kullanıcı bilgisi oluştur
        run: |
          HOST=$(echo "${{ steps.get_link.outputs.ssh_link }}" | sed -E 's|tcp://([^:]+):.*|\1|')
          PORT=$(echo "${{ steps.get_link.outputs.ssh_link }}" | sed -E 's|tcp://[^:]+:([0-9]+)|\1|')
          echo "Sunucu kullanıcı: $(whoami)"
          echo "SSH Bağlantı Komutu:"
          echo "ssh -i id_rsa -o StrictHostKeyChecking=no -p $PORT user@$HOST"
          echo "https://raw.githubusercontent.com/${{ github.repository }}/main/id_rsa.pub" > ssh_info.txt
          echo "ssh -i id_rsa -o StrictHostKeyChecking=no -p $PORT user@$HOST" >> ssh_info.txt
          echo "Sunucu kullanıcı: $(whoami)" >> ssh_info.txt

      - name: SSH info dosyasını yükle
        uses: actions/upload-artifact@v4
        with:
          name: ssh-info
          path: ssh_info.txt
