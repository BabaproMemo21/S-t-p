name: Setup Localtonet SSH Tunnel

on:
  workflow_dispatch:

jobs:
  create-ssh-tunnel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install unzip, zip and ssh client
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip zip openssh-client

      - name: Download localtonet binary
        run: |
          wget https://localtonet.com/download/localtonet-linux-x64.zip

      - name: Unzip localtonet
        run: unzip localtonet-linux-x64.zip

      - name: Make localtonet executable
        run: chmod +x localtonet

      - name: Generate SSH key pair
        run: |
          ssh-keygen -t ed25519 -f ./id_ed25519 -q -N ""

      - name: Start localtonet with token in background
        id: start_localtonet
        run: |
          nohup ./localtonet token "${{ secrets.LOCALTONET_TOKEN }}" > tunnel.log 2>&1 &
          sleep 10

      - name: Extract SSH link from log
        run: grep -oP 'ssh://\S+' tunnel.log > ssh_link.txt

      - name: Read SSH link and create SSH command
        id: create_ssh_cmd
        run: |
          SSH_URL=$(cat ssh_link.txt)
          SSH_HOST_PORT=$(echo $SSH_URL | sed -n 's/ssh:\/\/.*:\([0-9]*\)$/\1/p')
          SSH_USER_HOST=$(echo $SSH_URL | sed -n 's/ssh:\/\/\(.*\):[0-9]*$/\1/p')
          SSH_CMD="ssh -i ./id_ed25519 -p $SSH_HOST_PORT $SSH_USER_HOST"
          echo "ssh_command=$SSH_CMD" >> $GITHUB_OUTPUT

      - name: Save SSH command to script
        run: |
          echo "${{ steps.create_ssh_cmd.outputs.ssh_command }}" > connect.sh
          chmod +x connect.sh

      - name: Zip SSH key and connect script
        run: zip ssh-info.zip id_ed25519 connect.sh

      - name: Upload ssh-info.zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-info
          path: ssh-info.zip
