name: Setup Localtonet SSH Tunnel

on:
  workflow_dispatch:

jobs:
  create-ssh-tunnel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip zip openssh-client

      - name: Download and unzip localtonet
        run: |
          wget https://localtonet.com/download/localtonet-linux-x64.zip
          unzip localtonet-linux-x64.zip
          chmod +x localtonet-linux-x64

      - name: Generate SSH key pair
        run: |
          ssh-keygen -t ed25519 -f ./id_ed25519 -q -N ""
          cat ./id_ed25519.pub

      - name: Start localtonet with token
        id: start_localtonet
        run: |
          nohup ./localtonet-linux-x64 token "${{ secrets.LOCALTONET_TOKEN }}" > tunnel.log 2>&1 &
          sleep 5
          grep -oP 'ssh://\S+' tunnel.log > ssh_link.txt
          cat ssh_link.txt

      - name: Extract SSH connection info
        id: extract_ssh
        run: |
          SSH_URL=$(cat ssh_link.txt)
          # SSH URL örn: ssh://user@subdomain.localtonet.com:port
          # Komutu oluştur
          SSH_CMD="ssh -i ./id_ed25519 -p $(echo $SSH_URL | sed -n 's/.*:\([0-9]*\)$/\1/p') $(echo $SSH_URL | sed -n 's/ssh:\/\/\(.*\):[0-9]*$/\1/p')"
          echo "::set-output name=cmd::$SSH_CMD"

      - name: Create ZIP with SSH key and connect command
        run: |
          echo "${{ steps.extract_ssh.outputs.cmd }}" > connect.sh
          chmod +x connect.sh
          zip ssh-info.zip id_ed25519 connect.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ssh-info
          path: ssh-info.zip
